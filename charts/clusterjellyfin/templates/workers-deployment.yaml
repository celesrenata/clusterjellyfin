apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "clusterjellyfin.fullname" . }}-workers
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "clusterjellyfin.labels" . | nindent 4 }}
    component: workers
spec:
  serviceName: {{ include "clusterjellyfin.fullname" . }}-workers-headless
  replicas: {{ .Values.workers.replicas }}
  selector:
    matchLabels:
      {{- include "clusterjellyfin.selectorLabels" . | nindent 6 }}
      component: workers
  template:
    metadata:
      labels:
        {{- include "clusterjellyfin.selectorLabels" . | nindent 8 }}
        component: workers
    spec:
      {{- if .Values.workers.nodeSelector.enabled }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                {{- toYaml .Values.workers.nodeSelector.nodes | nindent 16 }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      initContainers:
      - name: fix-ssh-permissions
        image: "{{ .Values.image.worker.repository }}:{{ .Values.image.worker.tag }}"
        command: ["/bin/bash", "-c"]
        args:
        - |
          # Generate SSH host keys
          ssh-keygen -A
          
          # Create basic sshd_config
          cat > /etc/ssh/sshd_config << 'EOF'
          Port 22
          PasswordAuthentication no
          PubkeyAuthentication yes
          PermitRootLogin no
          EOF
          
          # Setup user SSH keys
          mkdir -p /home/jellyfin/.ssh
          cp /ssh-keys/* /home/jellyfin/.ssh/
          chmod 700 /home/jellyfin/.ssh
          chmod 600 /home/jellyfin/.ssh/*
          chown -R jellyfin:jellyfin /home/jellyfin/.ssh
        volumeMounts:
        - name: ssh-keys
          mountPath: /ssh-keys
        - name: ssh-host-keys
          mountPath: /etc/ssh
        - name: ssh-home
          mountPath: /home/jellyfin/.ssh
        securityContext:
          runAsUser: 0
      containers:
      - name: rffmpeg-worker
        image: "{{ .Values.image.worker.repository }}:{{ .Values.image.worker.tag }}"
        imagePullPolicy: {{ .Values.image.worker.pullPolicy }}
        securityContext:
          privileged: true
        env:
        - name: LIBVA_DRIVER_NAME
          value: "iHD"
        ports:
        - containerPort: 22
        volumeMounts:
        - name: ssh-home
          mountPath: /home/jellyfin/.ssh
        - name: ssh-host-keys
          mountPath: /etc/ssh
        - name: dev-dri
          mountPath: /dev/dri
        {{- if .Values.workers.gpu.enabled }}
        resources:
          requests:
            {{- toYaml .Values.workers.resources.requests | nindent 12 }}
            {{ .Values.workers.gpu.resource }}: {{ .Values.workers.gpu.limit }}
          limits:
            {{- toYaml .Values.workers.resources.limits | nindent 12 }}
            {{ .Values.workers.gpu.resource }}: {{ .Values.workers.gpu.limit }}
        {{- else }}
        resources:
          {{- toYaml .Values.workers.resources | nindent 10 }}
        {{- end }}
      volumes:
      - name: ssh-keys
        secret:
          secretName: {{ include "clusterjellyfin.fullname" . }}-ssh-keys
      - name: ssh-home
        emptyDir: {}
      - name: ssh-host-keys
        emptyDir: {}
      - name: dev-dri
        hostPath:
          path: /dev/dri
