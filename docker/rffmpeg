#!/bin/bash

# Local ffmpeg for validation
LOCAL_FFMPEG="/usr/lib/jellyfin-ffmpeg/ffmpeg"

# Use service name for load balancing across workers
WORKER_SERVICE="jellyfin-clusterjellyfin-workers"
SSH_USER="jellyfin"

# Check for validation flags
case "${1:-}" in
    ""|"-version"|"-f"|"-formats"|"-codecs"|"-decoders"|"-encoders"|"-bsfs"|"-protocols"|"-filters"|"-pix_fmts"|"-layouts"|"-sample_fmts"|"-buildconf")
        exec $LOCAL_FFMPEG "$@"
        ;;
    *)
        # Check if this is a ffprobe operation (metadata probing)
        if [[ "$*" == *"-print_format"* ]] || [[ "$*" == *"-show_streams"* ]] || [[ "$*" == *"-show_chapters"* ]] || [[ "$*" == *"-show_format"* ]]; then
            # This is ffprobe - use ffprobe on worker
            ssh -o StrictHostKeyChecking=no -i /home/jellyfin/.ssh/id_rsa $SSH_USER@$WORKER_SERVICE "/usr/lib/jellyfin-ffmpeg/ffprobe $(printf '%q ' "$@")"
        else
            # This is ffmpeg transcoding - use ffmpeg on worker
            ssh -o StrictHostKeyChecking=no -i /home/jellyfin/.ssh/id_rsa $SSH_USER@$WORKER_SERVICE "/usr/lib/jellyfin-ffmpeg/ffmpeg $(printf '%q ' "$@")"
        fi
        ;;
esac
